class Solution {
    public int maxProfit(int[] prices) {
        /*
        BRUTE FORCE -> O(N^2) ->TIME LIMIT EXCEEDED
        int n=prices.length;
        int diff=0;
        int max=0;
        for(int i=0;i<n-1;i++){
            for(int j=i+1;j<n;j++){
                if(prices[i]<prices[j]){
                    diff=prices[j]-prices[i];
                    max=Math.max(max,diff);
                }
            }
        }
        return max;
        */

        //OPTIMIZED APPROACH -> O(N)

        int minPrice = Integer.MAX_VALUE;
        int maxProfit = 0;
        int n=prices.length;
        for (int i=0;i<n;i++) {
            if (prices[i] < minPrice) {
                minPrice = prices[i];
            } else if (prices[i] - minPrice > maxProfit) {
                maxProfit = prices[i] - minPrice;
            }
        }
        
        return maxProfit;
    }
}

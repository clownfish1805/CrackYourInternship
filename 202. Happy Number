class Solution {
    public boolean isHappy(int n) {
        /*
        recursion method -> O(LOG N)

        int sum=0;
		if(n==1) {
			return true;
		}
		else if(n==4) {
			return false;
		}
		else {
            while(n>0){
			   int digit =n%10;
			   sum+=digit*digit;
			    n/=10;
		    }
		    return isHappy(sum);
        }
        */

        
         Set<Integer> seenNumbers = new HashSet<>();
        
        while (n != 1 && !seenNumbers.contains(n)) {
            seenNumbers.add(n);
            n = getNextNumber(n);
        }
        
        return n == 1;
    }
    
    private int getNextNumber(int n) {
        int sum = 0;
        while (n > 0) {
            int digit = n % 10;
            sum += digit * digit;
            n /= 10;
        }
        return sum;
    }
}
